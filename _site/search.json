[
  {
    "objectID": "ML/NumericalDataPrediction.html",
    "href": "ML/NumericalDataPrediction.html",
    "title": "Multiple Linear Regression: Application on FARS Dataset",
    "section": "",
    "text": "When modeling the relationship between a dependent variable y and multiple independent variables x_1, x_2, \\dots, x_n, the linear equation can be written as: \\begin{equation}\ny_i=\\beta_0+\\beta_1 x_{i 1}+\\beta_2 x_{i 2}+\\cdots+\\beta_n x_{i n}+\\epsilon_i\n\\end{equation}\nwhere:\n\ny_i is the observed value of the dependent variable for the i^{th} observation.\nx_1, x_2, \\dots, x_n are the values of the independent variables for the i^{th} observation.\n\\beta_0, \\beta_1, \\beta_n are the regression coefficients, with \\beta_0 being the y-intercept.\n\\epsilon_i is the error term for the i^{th} observation, capturing the difference between the observed value and the value predicted by the model.\n\nThe requirement here is to find the \\beta_i that minimizes the meas square error of \\epsilon_i. The above could be solved in multiple ways. However, one easy way to solve it is through matrix multiplication since CPU’s can deal faster with matrix manipulation.\n\n\nGiven:\n\n\\boldsymbol{X} is the design matrix of size m \\times (n + 1).\n\\boldsymbol{y} is a column vector of size m \\times 1 containing the dependent variable values.\n\\boldsymbol{\\beta} is a column vector of size (n + 1) \\times 1 containing the regression coefficients.\n\\boldsymbol{\\epsilon} is a column vector of size m \\times 1 representing the errors.\n\nThe relationship is given by: \\begin{equation}\n\\large{y} = \\large{X} \\beta + \\epsilon\n\\end{equation}\nTo determine the value of \\beta, one might think to rearrange the equation as:\n\\begin{equation}\n\\beta = \\frac{\\large{y}}{\\large{X}}\n\\end{equation}\nHowever, this representation is not accurate in the context of matrix operations. The inaccuracy arises due to the nature of matrices and how they are manipulated. Here’s a breakdown of the issues:\n\nMatrix Division: In the realm of matrices, there isn’t a direct concept of division like there is with regular numbers. So, saying \\beta = \\frac{y}{X} doesn’t have a straightforward meaning.\nMatrix Multiplication: Matrix multiplication is not commutative. This means that the product AB is not necessarily the same as the product BA. So, even if we were to try to “isolate” \\beta by some matrix operation, it wouldn’t be as simple as dividing both sides by X.\nCorrect Approach: The correct way to “isolate” \\beta when dealing with matrices is to multiply both sides of the equation by the inverse of X (assuming X is invertible). The equation would look something like: \\beta = X^{-1}y. Note that this equation assumes that X is a square matrix and has an inverse. If X is not square, or doesn’t have an inverse, other methods like the Moore-Penrose pseudoinverse would be used to estimate \\beta.\nDimensionality: Even if we were to entertain the idea of matrix division, the dimensions must be compatible. In the equation y = X\\beta + \\epsilon, y is a column vector of size m \\times 1, X is a matrix of size m \\times n, and \\beta is a column vector of size n \\times 1. Dividing an m \\times 1 vector by an m \\times n matrix doesn’t produce a consistent result in terms of matrix dimensions.\n\nThe reason we use the equation $ = (^T )^{-1} ^T $ instead of $ = ^{-1} $ is due to the structure and properties of the design matrix ( ) in linear regression.\n\nNon-Square Matrix: In most real-world applications of linear regression, \\mathbf{X} is not a square matrix. It usually has more rows (observations) than columns (predictors). Only square matrices possess inverses in the traditional sense. Therefore, \\mathbf{X}^{-1} doesn’t exist for these cases.\nPseudo-Inverse: The expression (\\mathbf{X}^T \\mathbf{X})^{-1} \\mathbf{X}^T is known as the Moore-Penrose pseudo-inverse of \\mathbf{X}. This pseudo-inverse provides a means to approximate an inverse.\nProjection onto Column Space: The term \\mathbf{X}^T \\mathbf{y} can be interpreted as projecting the response vector \\mathbf{y} onto the column space of \\mathbf{X}.\nMinimization of Residuals: The expression (\\mathbf{X}^T \\mathbf{X})^{-1} \\mathbf{X}^T originates from differentiating the sum of squared residuals with respect to \\boldsymbol{\\beta} and setting it to zero.\n\nWe’ll be applying this concept to the FARS dataset. Managed by the U.S. National Highway Traffic Safety Administration (NHTSA), the Fatality Analysis Reporting System (FARS) provides an extensive record of fatal motor vehicle crashes in the U.S. and Puerto Rico since 1975."
  },
  {
    "objectID": "ML/NumericalDataPrediction.html#mathematical-formulation",
    "href": "ML/NumericalDataPrediction.html#mathematical-formulation",
    "title": "Multiple Linear Regression: Application on FARS Dataset",
    "section": "",
    "text": "When modeling the relationship between a dependent variable y and multiple independent variables x_1, x_2, \\dots, x_n, the linear equation can be written as: \\begin{equation}\ny_i=\\beta_0+\\beta_1 x_{i 1}+\\beta_2 x_{i 2}+\\cdots+\\beta_n x_{i n}+\\epsilon_i\n\\end{equation}\nwhere:\n\ny_i is the observed value of the dependent variable for the i^{th} observation.\nx_1, x_2, \\dots, x_n are the values of the independent variables for the i^{th} observation.\n\\beta_0, \\beta_1, \\beta_n are the regression coefficients, with \\beta_0 being the y-intercept.\n\\epsilon_i is the error term for the i^{th} observation, capturing the difference between the observed value and the value predicted by the model.\n\nThe requirement here is to find the \\beta_i that minimizes the meas square error of \\epsilon_i. The above could be solved in multiple ways. However, one easy way to solve it is through matrix multiplication since CPU’s can deal faster with matrix manipulation.\n\n\nGiven:\n\n\\boldsymbol{X} is the design matrix of size m \\times (n + 1).\n\\boldsymbol{y} is a column vector of size m \\times 1 containing the dependent variable values.\n\\boldsymbol{\\beta} is a column vector of size (n + 1) \\times 1 containing the regression coefficients.\n\\boldsymbol{\\epsilon} is a column vector of size m \\times 1 representing the errors.\n\nThe relationship is given by: \\begin{equation}\n\\large{y} = \\large{X} \\beta + \\epsilon\n\\end{equation}\nTo determine the value of \\beta, one might think to rearrange the equation as:\n\\begin{equation}\n\\beta = \\frac{\\large{y}}{\\large{X}}\n\\end{equation}\nHowever, this representation is not accurate in the context of matrix operations. The inaccuracy arises due to the nature of matrices and how they are manipulated. Here’s a breakdown of the issues:\n\nMatrix Division: In the realm of matrices, there isn’t a direct concept of division like there is with regular numbers. So, saying \\beta = \\frac{y}{X} doesn’t have a straightforward meaning.\nMatrix Multiplication: Matrix multiplication is not commutative. This means that the product AB is not necessarily the same as the product BA. So, even if we were to try to “isolate” \\beta by some matrix operation, it wouldn’t be as simple as dividing both sides by X.\nCorrect Approach: The correct way to “isolate” \\beta when dealing with matrices is to multiply both sides of the equation by the inverse of X (assuming X is invertible). The equation would look something like: \\beta = X^{-1}y. Note that this equation assumes that X is a square matrix and has an inverse. If X is not square, or doesn’t have an inverse, other methods like the Moore-Penrose pseudoinverse would be used to estimate \\beta.\nDimensionality: Even if we were to entertain the idea of matrix division, the dimensions must be compatible. In the equation y = X\\beta + \\epsilon, y is a column vector of size m \\times 1, X is a matrix of size m \\times n, and \\beta is a column vector of size n \\times 1. Dividing an m \\times 1 vector by an m \\times n matrix doesn’t produce a consistent result in terms of matrix dimensions.\n\nThe reason we use the equation $ = (^T )^{-1} ^T $ instead of $ = ^{-1} $ is due to the structure and properties of the design matrix ( ) in linear regression.\n\nNon-Square Matrix: In most real-world applications of linear regression, \\mathbf{X} is not a square matrix. It usually has more rows (observations) than columns (predictors). Only square matrices possess inverses in the traditional sense. Therefore, \\mathbf{X}^{-1} doesn’t exist for these cases.\nPseudo-Inverse: The expression (\\mathbf{X}^T \\mathbf{X})^{-1} \\mathbf{X}^T is known as the Moore-Penrose pseudo-inverse of \\mathbf{X}. This pseudo-inverse provides a means to approximate an inverse.\nProjection onto Column Space: The term \\mathbf{X}^T \\mathbf{y} can be interpreted as projecting the response vector \\mathbf{y} onto the column space of \\mathbf{X}.\nMinimization of Residuals: The expression (\\mathbf{X}^T \\mathbf{X})^{-1} \\mathbf{X}^T originates from differentiating the sum of squared residuals with respect to \\boldsymbol{\\beta} and setting it to zero.\n\nWe’ll be applying this concept to the FARS dataset. Managed by the U.S. National Highway Traffic Safety Administration (NHTSA), the Fatality Analysis Reporting System (FARS) provides an extensive record of fatal motor vehicle crashes in the U.S. and Puerto Rico since 1975."
  },
  {
    "objectID": "ML/NumericalDataPrediction.html#code",
    "href": "ML/NumericalDataPrediction.html#code",
    "title": "Multiple Linear Regression: Application on FARS Dataset",
    "section": "Code",
    "text": "Code\n\nDescribe the FARS (Fatality Analysis Reporting System) dataset\nOur analysis will encompass six specific tables within this dataset. The tables and their respective descriptions are as follows:\n\nPerson: This table provides detailed information on the individuals involved in the accident.\nDrugs: This table presents data on post-mortem toxicology results, indicating the presence of drugs in the bloodstream of the deceased.\nRace: This table delineates the ethnic background of the individuals involved in the accident.\nVision: This table offers insights into the visual clarity at the accident site.\nWeather: This table details the meteorological conditions at the time of the accident.\nManeuver: This table ascertains whether the drivers were executing a maneuver at the time of the incident and provides specifics about the maneuver in question.\n\n\n\nCode\n#import required libraries\nimport pandas as pd\nimport os\nimport warnings\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n#inline plots\n%matplotlib inline\n\n# Set Seaborn style to \"whitegrid\" for a white background with grid lines\nsns.set_style(\"whitegrid\")\n\n#supress warnings!\nwarnings.simplefilter(action='ignore', category=Warning)\n# Set the display option to show all columns\npd.set_option('display.max_columns', None)\n\nprint(\"required libraries loaded successfully!\")\n\n\nrequired libraries loaded successfully!\n\n\n\n\nCode\n# Define the directory where the datasets are\ndirectory = \"D:\\\\OneDrive - Virginia Tech\\\\01.PhD\\\\02.CourseMaterials\\\\04.Fall2023\\\\02.CS5805_MachineLearning\\\\04.Projects\\\\src\\\\data\\\\FARS2021NationalCSV\"\n\n# Check if the directory exists\nif not os.path.exists(directory):\n    raise ValueError(\"The directory does not exist.\")\n\n# Define files and their respective key columns\nfiles_and_keys = {\n    \"person.csv\": [\"ST_CASE\", \"VEH_NO\", \"PER_NO\"],\n    \"drugs.csv\": [\"ST_CASE\", \"VEH_NO\", \"PER_NO\"],\n    \"maneuver.csv\": [\"ST_CASE\", \"VEH_NO\"],\n    \"race.csv\": [\"ST_CASE\", \"VEH_NO\", \"PER_NO\"],\n    \"vision.csv\": [\"ST_CASE\", \"VEH_NO\"],\n    \"weather.csv\": [\"ST_CASE\"]\n}\n\n# Create an initial empty DataFrame\nmerged_df = None\n\nfor csv_file, key_cols in files_and_keys.items():\n    file_path = os.path.join(directory, csv_file)\n    if not os.path.exists(file_path):\n        print(f\"File {csv_file} does not exist. Skipping...\")\n        continue\n\n    try:\n        temp_df = pd.read_csv(file_path, encoding='ISO-8859-1')\n    except UnicodeDecodeError:\n        print(f\"Could not decode file {csv_file} with ISO-8859-1 encoding. Skipping...\")\n        continue\n\n    # If merged_df is empty, initialize it with the first CSV data\n    if merged_df is None:\n        merged_df = temp_df\n    else:\n        # Find common key columns between merged_df and temp_df\n        merged_keys = [col for col in key_cols if col in merged_df.columns and col in temp_df.columns]\n\n        # Only proceed if there are common keys to merge on\n        if merged_keys:\n            # Drop non-key columns from temp_df that already exist in merged_df\n            drop_cols = [col for col in temp_df.columns if col in merged_df.columns and col not in merged_keys]\n            temp_df = temp_df.drop(columns=drop_cols)\n\n            # Merge based on the common key columns\n            merged_df = pd.merge(merged_df, temp_df, on=merged_keys, how='outer')\n            \nprint(\"Files merged and loaded as 'merged_df' successfully!\")\nmerged_df.head()\n\n\nFiles merged and loaded as 'merged_df' successfully!\n\n\n\n\n\n\n\n\n\nSTATE\nSTATENAME\nST_CASE\nVEH_NO\nPER_NO\nVE_FORMS\nCOUNTY\nMONTH\nMONTHNAME\nDAY\nDAYNAME\nHOUR\nHOURNAME\nMINUTE\nMINUTENAME\nHARM_EV\nHARM_EVNAME\nMAN_COLL\nMAN_COLLNAME\nSCH_BUS\nSCH_BUSNAME\nMOD_YEAR\nMOD_YEARNAME\nVPICMAKE\nVPICMAKENAME\nVPICMODEL\nVPICMODELNAME\nVPICBODYCLASS\nVPICBODYCLASSNAME\nMAKE\nMAKENAME\nBODY_TYP\nBODY_TYPNAME\nICFINALBODY\nICFINALBODYNAME\nGVWR_FROM\nGVWR_FROMNAME\nGVWR_TO\nGVWR_TONAME\nTOW_VEH\nTOW_VEHNAME\nAGE\nAGENAME\nSEX\nSEXNAME\nPER_TYP\nPER_TYPNAME\nINJ_SEV\nINJ_SEVNAME\nSEAT_POS\nSEAT_POSNAME\nREST_USE\nREST_USENAME\nREST_MIS\nREST_MISNAME\nHELM_USE\nHELM_USENAME\nHELM_MIS\nHELM_MISNAME\nAIR_BAG\nAIR_BAGNAME\nEJECTION\nEJECTIONNAME\nEJ_PATH\nEJ_PATHNAME\nEXTRICAT\nEXTRICATNAME\nDRINKING\nDRINKINGNAME\nALC_DET\nALC_DETNAME\nALC_STATUS\nALC_STATUSNAME\nATST_TYP\nATST_TYPNAME\nALC_RES\nALC_RESNAME\nDRUGS\nDRUGSNAME\nDRUG_DET\nDRUG_DETNAME\nDSTATUS\nDSTATUSNAME\nHOSPITAL\nHOSPITALNAME\nDOA\nDOANAME\nDEATH_DA\nDEATH_DANAME\nDEATH_MO\nDEATH_MONAME\nDEATH_YR\nDEATH_YRNAME\nDEATH_HR\nDEATH_HRNAME\nDEATH_MN\nDEATH_MNNAME\nDEATH_TM\nDEATH_TMNAME\nLAG_HRS\nLAG_HRSNAME\nLAG_MINS\nLAG_MINSNAME\nSTR_VEH\nLOCATION\nLOCATIONNAME\nWORK_INJ\nWORK_INJNAME\nHISPANIC\nHISPANICNAME\nRUR_URB\nRUR_URBNAME\nFUNC_SYS\nFUNC_SYSNAME\nSPEC_USE\nSPEC_USENAME\nEMER_USE\nEMER_USENAME\nROLLOVER\nROLLOVERNAME\nIMPACT1\nIMPACT1NAME\nFIRE_EXP\nFIRE_EXPNAME\nMAK_MOD\nMAK_MODNAME\nDRUGSPEC\nDRUGSPECNAME\nDRUGRES\nDRUGRESNAME\nMANEUVER\nMANEUVERNAME\nRACE\nRACENAME\nORDER\nORDERNAME\nMULTRACE\nMULTRACENAME\nVISION\nVISIONNAME\nWEATHER\nWEATHERNAME\n\n\n\n\n0\n1.0\nAlabama\n10001\n1\n1.0\n2.0\n115.0\n2.0\nFebruary\n12.0\n12.0\n22.0\n10:00pm-10:59pm\n10.0\n10\n12.0\nMotor Vehicle In-Transport\n2.0\nFront-to-Front\n0.0\nNo\n2016.0\n2016\n483.0\nJeep\n1947.0\nPatriot\n7.0\nSport Utility Vehicle (SUV)/Multi-Purpose Vehi...\n2.0\nJeep / Kaiser-Jeep / Willys- Jeep\n14.0\nCompact Utility (Utility Vehicle Categories \"S...\n0.0\nNot Applicable\n11.0\nClass 1: 6,000 lbs. or less (2,722 kg or less)\n11.0\nClass 1: 6,000 lbs. or less (2,722 kg or less)\n0.0\nNo Trailing Units\n31.0\n31 Years\n2.0\nFemale\n1.0\nDriver of a Motor Vehicle In-Transport\n4.0\nFatal Injury (K)\n11.0\nFront Seat, Left Side\n2.0\nLap Belt Only Used\n0.0\nNo Indication of Misuse\n20.0\nNot Applicable\n7.0\nNone Used/Not Applicable\n8.0\nDeployed- Combination\n0.0\nNot Ejected\n0.0\nEjection Path Not Applicable\n9.0\nUnknown\n8.0\nNot Reported\n9.0\nNot Reported\n2.0\nTest Given\n1.0\nBlood\n0.0\n0.000 % BAC\n8.0\nNot Reported\n8.0\nNot Reported\n2.0\nTest Given\n0.0\nNot Transported for Treatment\n7.0\nDied at Scene\n12.0\n12\n2.0\nFebruary\n2021.0\n2021\n22.0\n22:00-22:59\n10.0\n10\n2210.0\n2210\n0.0\n0\n0.0\n0\n0.0\n0.0\nOccupant of a Motor Vehicle\n0.0\nNo\n7.0\nNon-Hispanic\n2.0\nUrban\n1.0\nInterstate\n0.0\nNo Special Use Noted\n0.0\nNot Applicable\n0.0\nNo Rollover\n12.0\n12 Clock Point\n0.0\nNo or Not Reported\n2407.0\nJeep / Kaiser-Jeep / Willys- Jeep Patriot\n1.0\nWhole Blood\n600.0\nDELTA 9\n98.0\nNot Reported\n2.0\nBlack or African American\n1.0\n1\n0.0\nNo\n0.0\nNo Obstruction Noted\n2\nRain\n\n\n1\n1.0\nAlabama\n10001\n1\n2.0\n2.0\n115.0\n2.0\nFebruary\n12.0\n12.0\n22.0\n10:00pm-10:59pm\n10.0\n10\n12.0\nMotor Vehicle In-Transport\n2.0\nFront-to-Front\n0.0\nNo\n2016.0\n2016\n483.0\nJeep\n1947.0\nPatriot\n7.0\nSport Utility Vehicle (SUV)/Multi-Purpose Vehi...\n2.0\nJeep / Kaiser-Jeep / Willys- Jeep\n14.0\nCompact Utility (Utility Vehicle Categories \"S...\n0.0\nNot Applicable\n11.0\nClass 1: 6,000 lbs. or less (2,722 kg or less)\n11.0\nClass 1: 6,000 lbs. or less (2,722 kg or less)\n0.0\nNo Trailing Units\n3.0\n3 Years\n2.0\nFemale\n2.0\nPassenger of a Motor Vehicle In-Transport\n2.0\nSuspected Minor Injury (B)\n21.0\nSecond Seat, Left Side\n10.0\nChild Restraint System - Forward Facing\n1.0\nYes, Indication of Misuse\n20.0\nNot Applicable\n7.0\nNone Used/Not Applicable\n20.0\nNot Deployed\n0.0\nNot Ejected\n0.0\nEjection Path Not Applicable\n9.0\nUnknown\n8.0\nNot Reported\n9.0\nNot Reported\n0.0\nTest Not Given\n0.0\nTest Not Given\n996.0\nTest Not Given\n8.0\nNot Reported\n8.0\nNot Reported\n0.0\nTest Not Given\n5.0\nEMS Ground\n0.0\nNot Applicable\n88.0\nNot Applicable (Non-Fatal)\n88.0\nNot Applicable (Non-Fatal)\n8888.0\nNot Applicable (Non-fatal)\n88.0\nNot Applicable (Non-fatal)\n88.0\nNot Applicable (Non-fatal)\n8888.0\nNot Applicable (Non-fatal)\n999.0\nUnknown\n99.0\nUnknown\n0.0\n0.0\nOccupant of a Motor Vehicle\n8.0\nNot Applicable (not a fatality)\n0.0\nNot A Fatality (not Applicable)\n2.0\nUrban\n1.0\nInterstate\n0.0\nNo Special Use Noted\n0.0\nNot Applicable\n0.0\nNo Rollover\n12.0\n12 Clock Point\n0.0\nNo or Not Reported\n2407.0\nJeep / Kaiser-Jeep / Willys- Jeep Patriot\n0.0\nTest Not Given\n0.0\nTest Not Given\n98.0\nNot Reported\n0.0\nNot a Fatality (not Applicable)\n1.0\n1\n0.0\nNo\n0.0\nNo Obstruction Noted\n2\nRain\n\n\n2\n1.0\nAlabama\n10001\n2\n1.0\n2.0\n115.0\n2.0\nFebruary\n12.0\n12.0\n22.0\n10:00pm-10:59pm\n10.0\n10\n12.0\nMotor Vehicle In-Transport\n2.0\nFront-to-Front\n0.0\nNo\n2021.0\n2021\n485.0\nVolvo\n1962.0\nXC60\n7.0\nSport Utility Vehicle (SUV)/Multi-Purpose Vehi...\n51.0\nVolvo\n14.0\nCompact Utility (Utility Vehicle Categories \"S...\n0.0\nNot Applicable\n11.0\nClass 1: 6,000 lbs. or less (2,722 kg or less)\n11.0\nClass 1: 6,000 lbs. or less (2,722 kg or less)\n0.0\nNo Trailing Units\n25.0\n25 Years\n1.0\nMale\n1.0\nDriver of a Motor Vehicle In-Transport\n4.0\nFatal Injury (K)\n11.0\nFront Seat, Left Side\n3.0\nShoulder and Lap Belt Used\n0.0\nNo Indication of Misuse\n20.0\nNot Applicable\n7.0\nNone Used/Not Applicable\n8.0\nDeployed- Combination\n0.0\nNot Ejected\n0.0\nEjection Path Not Applicable\n9.0\nUnknown\n0.0\nNo (Alcohol Not Involved)\n9.0\nNot Reported\n2.0\nTest Given\n1.0\nBlood\n0.0\n0.000 % BAC\n0.0\nNo (drugs not involved)\n8.0\nNot Reported\n2.0\nTest Given\n0.0\nNot Transported for Treatment\n7.0\nDied at Scene\n12.0\n12\n2.0\nFebruary\n2021.0\n2021\n22.0\n22:00-22:59\n10.0\n10\n2210.0\n2210\n0.0\n0\n0.0\n0\n0.0\n0.0\nOccupant of a Motor Vehicle\n0.0\nNo\n7.0\nNon-Hispanic\n2.0\nUrban\n1.0\nInterstate\n0.0\nNo Special Use Noted\n0.0\nNot Applicable\n0.0\nNo Rollover\n12.0\n12 Clock Point\n0.0\nNo or Not Reported\n51404.0\nVolvo XC60 (For 2019 on. For model years 2008...\n1.0\nWhole Blood\n1.0\nTested, No Drugs Found/Negative\n98.0\nNot Reported\n4.0\nChinese\n1.0\n1\n0.0\nNo\n0.0\nNo Obstruction Noted\n2\nRain\n\n\n3\n1.0\nAlabama\n10002\n1\n1.0\n1.0\n73.0\n2.0\nFebruary\n11.0\n11.0\n18.0\n6:00pm-6:59pm\n0.0\n0\n25.0\nConcrete Traffic Barrier\n0.0\nThe First Harmful Event was Not a Collision wi...\n0.0\nNo\n2004.0\n2004\n515.0\nLexus\n2475.0\nES\n13.0\nSedan/Saloon\n59.0\nLexus\n4.0\n4-door sedan, hardtop\n0.0\nNot Applicable\n11.0\nClass 1: 6,000 lbs. or less (2,722 kg or less)\n11.0\nClass 1: 6,000 lbs. or less (2,722 kg or less)\n0.0\nNo Trailing Units\n34.0\n34 Years\n2.0\nFemale\n1.0\nDriver of a Motor Vehicle In-Transport\n4.0\nFatal Injury (K)\n11.0\nFront Seat, Left Side\n3.0\nShoulder and Lap Belt Used\n0.0\nNo Indication of Misuse\n20.0\nNot Applicable\n7.0\nNone Used/Not Applicable\n8.0\nDeployed- Combination\n0.0\nNot Ejected\n0.0\nEjection Path Not Applicable\n9.0\nUnknown\n0.0\nNo (Alcohol Not Involved)\n9.0\nNot Reported\n0.0\nTest Not Given\n0.0\nTest Not Given\n996.0\nTest Not Given\n0.0\nNo (drugs not involved)\n8.0\nNot Reported\n0.0\nTest Not Given\n0.0\nNot Transported for Treatment\n7.0\nDied at Scene\n11.0\n11\n2.0\nFebruary\n2021.0\n2021\n18.0\n18:00-18:59\n0.0\n0\n1800.0\n1800\n0.0\n0\n0.0\n0\n0.0\n0.0\nOccupant of a Motor Vehicle\n0.0\nNo\n7.0\nNon-Hispanic\n2.0\nUrban\n1.0\nInterstate\n0.0\nNo Special Use Noted\n0.0\nNot Applicable\n0.0\nNo Rollover\n11.0\n11 Clock Point\n0.0\nNo or Not Reported\n59031.0\nLexus ES-250/300/300h/330/ 350\n0.0\nTest Not Given\n0.0\nTest Not Given\n98.0\nNot Reported\n2.0\nBlack or African American\n1.0\n1\n0.0\nNo\n0.0\nNo Obstruction Noted\n2\nRain\n\n\n4\n1.0\nAlabama\n10002\n1\n2.0\n1.0\n73.0\n2.0\nFebruary\n11.0\n11.0\n18.0\n6:00pm-6:59pm\n0.0\n0\n25.0\nConcrete Traffic Barrier\n0.0\nThe First Harmful Event was Not a Collision wi...\n0.0\nNo\n2004.0\n2004\n515.0\nLexus\n2475.0\nES\n13.0\nSedan/Saloon\n59.0\nLexus\n4.0\n4-door sedan, hardtop\n0.0\nNot Applicable\n11.0\nClass 1: 6,000 lbs. or less (2,722 kg or less)\n11.0\nClass 1: 6,000 lbs. or less (2,722 kg or less)\n0.0\nNo Trailing Units\n34.0\n34 Years\n1.0\nMale\n2.0\nPassenger of a Motor Vehicle In-Transport\n4.0\nFatal Injury (K)\n13.0\nFront Seat, Right Side\n3.0\nShoulder and Lap Belt Used\n0.0\nNo Indication of Misuse\n20.0\nNot Applicable\n7.0\nNone Used/Not Applicable\n8.0\nDeployed- Combination\n0.0\nNot Ejected\n0.0\nEjection Path Not Applicable\n9.0\nUnknown\n8.0\nNot Reported\n9.0\nNot Reported\n0.0\nTest Not Given\n0.0\nTest Not Given\n996.0\nTest Not Given\n8.0\nNot Reported\n8.0\nNot Reported\n0.0\nTest Not Given\n0.0\nNot Transported for Treatment\n7.0\nDied at Scene\n11.0\n11\n2.0\nFebruary\n2021.0\n2021\n18.0\n18:00-18:59\n0.0\n0\n1800.0\n1800\n0.0\n0\n0.0\n0\n0.0\n0.0\nOccupant of a Motor Vehicle\n0.0\nNo\n7.0\nNon-Hispanic\n2.0\nUrban\n1.0\nInterstate\n0.0\nNo Special Use Noted\n0.0\nNot Applicable\n0.0\nNo Rollover\n11.0\n11 Clock Point\n0.0\nNo or Not Reported\n59031.0\nLexus ES-250/300/300h/330/ 350\n0.0\nTest Not Given\n0.0\nTest Not Given\n98.0\nNot Reported\n2.0\nBlack or African American\n1.0\n1\n0.0\nNo\n0.0\nNo Obstruction Noted\n2\nRain\n\n\n\n\n\n\n\nThe variables description is provided here\n\n\nCode\nmerged_df[\"WEATHERNAME\"].unique()\n\n\narray(['Rain', 'Clear', 'Cloudy', 'Fog, Smog, Smoke',\n       'Reported as Unknown', 'Severe Crosswinds', 'Snow', 'Blowing Snow',\n       'Not Reported', 'Freezing Rain or Drizzle', 'Other',\n       'Blowing Sand, Soil, Dirt', 'Sleet or Hail'], dtype=object)\n\n\n\n\nCode\n# Extract potential prefixes\npotential_prefixes = [col for col in merged_df.columns if not col.endswith('NAME')]\n\n# Identify columns with the suffix \"NAME\"\nname_columns = [col for col in merged_df.columns if col.endswith('NAME')]\n\n# Filter out prefixes that don't have a corresponding 'PREFIXNAME' column\nvalid_prefixes = [prefix for prefix in potential_prefixes if prefix + 'NAME' in merged_df.columns]\n\n# Create dictionaries for each valid pair\ndictionaries = {}\nfor prefix in valid_prefixes:\n    name_col = prefix + 'NAME'\n    \n    # Filter out rows with nan values in either column\n    filtered_df = merged_df.dropna(subset=[prefix, name_col])\n    \n    dictionaries[prefix] = dict(zip(filtered_df[prefix], filtered_df[name_col]))\n    \n# Drop these columns from the DataFrame\ndf = merged_df.drop(columns=name_columns)\n\n\n\n\nCode\ndf.head()\n\n\n\n\n\n\n\n\n\nSTATE\nST_CASE\nVEH_NO\nPER_NO\nVE_FORMS\nCOUNTY\nMONTH\nDAY\nHOUR\nMINUTE\nHARM_EV\nMAN_COLL\nSCH_BUS\nMOD_YEAR\nVPICMAKE\nVPICMODEL\nVPICBODYCLASS\nMAKE\nBODY_TYP\nICFINALBODY\nGVWR_FROM\nGVWR_TO\nTOW_VEH\nAGE\nSEX\nPER_TYP\nINJ_SEV\nSEAT_POS\nREST_USE\nREST_MIS\nHELM_USE\nHELM_MIS\nAIR_BAG\nEJECTION\nEJ_PATH\nEXTRICAT\nDRINKING\nALC_DET\nALC_STATUS\nATST_TYP\nALC_RES\nDRUGS\nDRUG_DET\nDSTATUS\nHOSPITAL\nDOA\nDEATH_DA\nDEATH_MO\nDEATH_YR\nDEATH_HR\nDEATH_MN\nDEATH_TM\nLAG_HRS\nLAG_MINS\nSTR_VEH\nLOCATION\nWORK_INJ\nHISPANIC\nRUR_URB\nFUNC_SYS\nSPEC_USE\nEMER_USE\nROLLOVER\nIMPACT1\nFIRE_EXP\nMAK_MOD\nDRUGSPEC\nDRUGRES\nMANEUVER\nRACE\nORDER\nMULTRACE\nVISION\nWEATHER\n\n\n\n\n0\n1.0\n10001\n1\n1.0\n2.0\n115.0\n2.0\n12.0\n22.0\n10.0\n12.0\n2.0\n0.0\n2016.0\n483.0\n1947.0\n7.0\n2.0\n14.0\n0.0\n11.0\n11.0\n0.0\n31.0\n2.0\n1.0\n4.0\n11.0\n2.0\n0.0\n20.0\n7.0\n8.0\n0.0\n0.0\n9.0\n8.0\n9.0\n2.0\n1.0\n0.0\n8.0\n8.0\n2.0\n0.0\n7.0\n12.0\n2.0\n2021.0\n22.0\n10.0\n2210.0\n0.0\n0.0\n0.0\n0.0\n0.0\n7.0\n2.0\n1.0\n0.0\n0.0\n0.0\n12.0\n0.0\n2407.0\n1.0\n600.0\n98.0\n2.0\n1.0\n0.0\n0.0\n2\n\n\n1\n1.0\n10001\n1\n2.0\n2.0\n115.0\n2.0\n12.0\n22.0\n10.0\n12.0\n2.0\n0.0\n2016.0\n483.0\n1947.0\n7.0\n2.0\n14.0\n0.0\n11.0\n11.0\n0.0\n3.0\n2.0\n2.0\n2.0\n21.0\n10.0\n1.0\n20.0\n7.0\n20.0\n0.0\n0.0\n9.0\n8.0\n9.0\n0.0\n0.0\n996.0\n8.0\n8.0\n0.0\n5.0\n0.0\n88.0\n88.0\n8888.0\n88.0\n88.0\n8888.0\n999.0\n99.0\n0.0\n0.0\n8.0\n0.0\n2.0\n1.0\n0.0\n0.0\n0.0\n12.0\n0.0\n2407.0\n0.0\n0.0\n98.0\n0.0\n1.0\n0.0\n0.0\n2\n\n\n2\n1.0\n10001\n2\n1.0\n2.0\n115.0\n2.0\n12.0\n22.0\n10.0\n12.0\n2.0\n0.0\n2021.0\n485.0\n1962.0\n7.0\n51.0\n14.0\n0.0\n11.0\n11.0\n0.0\n25.0\n1.0\n1.0\n4.0\n11.0\n3.0\n0.0\n20.0\n7.0\n8.0\n0.0\n0.0\n9.0\n0.0\n9.0\n2.0\n1.0\n0.0\n0.0\n8.0\n2.0\n0.0\n7.0\n12.0\n2.0\n2021.0\n22.0\n10.0\n2210.0\n0.0\n0.0\n0.0\n0.0\n0.0\n7.0\n2.0\n1.0\n0.0\n0.0\n0.0\n12.0\n0.0\n51404.0\n1.0\n1.0\n98.0\n4.0\n1.0\n0.0\n0.0\n2\n\n\n3\n1.0\n10002\n1\n1.0\n1.0\n73.0\n2.0\n11.0\n18.0\n0.0\n25.0\n0.0\n0.0\n2004.0\n515.0\n2475.0\n13.0\n59.0\n4.0\n0.0\n11.0\n11.0\n0.0\n34.0\n2.0\n1.0\n4.0\n11.0\n3.0\n0.0\n20.0\n7.0\n8.0\n0.0\n0.0\n9.0\n0.0\n9.0\n0.0\n0.0\n996.0\n0.0\n8.0\n0.0\n0.0\n7.0\n11.0\n2.0\n2021.0\n18.0\n0.0\n1800.0\n0.0\n0.0\n0.0\n0.0\n0.0\n7.0\n2.0\n1.0\n0.0\n0.0\n0.0\n11.0\n0.0\n59031.0\n0.0\n0.0\n98.0\n2.0\n1.0\n0.0\n0.0\n2\n\n\n4\n1.0\n10002\n1\n2.0\n1.0\n73.0\n2.0\n11.0\n18.0\n0.0\n25.0\n0.0\n0.0\n2004.0\n515.0\n2475.0\n13.0\n59.0\n4.0\n0.0\n11.0\n11.0\n0.0\n34.0\n1.0\n2.0\n4.0\n13.0\n3.0\n0.0\n20.0\n7.0\n8.0\n0.0\n0.0\n9.0\n8.0\n9.0\n0.0\n0.0\n996.0\n8.0\n8.0\n0.0\n0.0\n7.0\n11.0\n2.0\n2021.0\n18.0\n0.0\n1800.0\n0.0\n0.0\n0.0\n0.0\n0.0\n7.0\n2.0\n1.0\n0.0\n0.0\n0.0\n11.0\n0.0\n59031.0\n0.0\n0.0\n98.0\n2.0\n1.0\n0.0\n0.0\n2\n\n\n\n\n\n\n\n\n\nDescribtive Statistics\n\n\nCode\n# Time-related Data\ntime_cols = ['MONTH']\nfor col in time_cols:\n    plt.figure(figsize=(12,6))\n    sns.histplot(df[col], bins=30, kde=True)\n    plt.title(f'Distribution of {col}')\n    # If current column is 'MONTH', set xticks to show all month names from the dictionary\n    if col == 'MONTH':\n        month_ticks = sorted(dictionaries[\"MONTH\"].keys())\n        month_labels = [dictionaries[\"MONTH\"][tick] for tick in month_ticks]\n        plt.xticks(ticks=month_ticks, labels=month_labels, rotation=45)\n        plt.tight_layout()  # Adjust the space allocation for y-axis labels\n    plt.show()\n\n\n\n\n\nIn analyzing the monthly distribution of road accidents, the data reveals distinct patterns throughout the year. March registers the lowest count, slightly above 6,000, while June and August exhibit peaks, nearing or surpassing 10,000 accidents. The trend shows a moderate start in January, a dip in March, escalating to a climax in June, a minor decrease in July, another peak in August, and a decline up to November with a minor rise in December. Potential influencing factors include varying weather conditions, increased road traffic during summer vacation periods in June and August, and heightened travel during December’s festive season.\n\n\nCode\n# Categorical Data\ncat_cols = ['STATE', 'HARM_EV', 'MAN_COLL', 'SEX', 'INJ_SEV', 'REST_USE', 'DRINKING', 'DRUGS', 'HOSPITAL', 'RUR_URB', 'ROLLOVER', 'MANEUVER', 'RACE', 'VISION', 'WEATHER']\nfor col in cat_cols:\n    plt.figure(figsize=(12,6))\n    \n    # Create a temporary dataframe for visualization\n    temp_df = pd.DataFrame()\n    temp_df[col] = df[col]\n    \n    # Replace numerical values with their corresponding names\n    if col in dictionaries:\n        temp_df[col] = temp_df[col].map(dictionaries[col])\n    \n    # Display only the top 10 categories if there are many unique categories\n    top_categories = temp_df[col].value_counts().index[:10]\n    sns.countplot(data=temp_df, y=col, order=top_categories)\n    \n    plt.title(f'Distribution of {col}')\n    plt.tight_layout()  # Adjust the space allocation for y-axis labels\n    plt.show()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndictionaries[\"DRUGS\"]\n\n\n{8.0: 'Not Reported',\n 0.0: 'No (drugs not involved)',\n 9.0: 'Reported as Unknown',\n 1.0: 'Yes (drugs involved)'}\n\n\n\n\nCode\ndf[\"DRUGS\"].value_counts()\n\n\n8.0    57035\n0.0    36174\n1.0    13958\n9.0    10565\nName: DRUGS, dtype: int64"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to ‘Roadway Data Decoder: AI-Powered Traffic Analysis’",
    "section": "",
    "text": "Hello! I am Ahmed Aredah, a PhD student specializing in Civil Engineering with a focus on transportation. Concurrently, I’m also pursuing an MSc in Computer Science. My academic journey has equipped me with a unique blend of knowledge, bridging the gap between the worlds of transportation and computer science.\nI take pride in being the developer behind NeTrainSim, an open-source network train simulator. NeTrainSim is a collaborative effort between Virginia Tech (VT), North Carolina State University (NC), and Deutsch Bahn (DB). The project was supervised and steered by the esteemed Prof. Hesham Rakha. This initiative is a testament to my passion for contributing to the community and my commitment to advancing the field of transportation through technological innovations and collaborative research.\n\n\nThis platform serves as a window into my exploration of publicly available datasets related to traffic engineering. The datasets range from those focusing on safety to general traffic engineering datasets. Through comprehensive analysis, I aim to extract valuable insights, shed light on patterns, and present findings in an accessible manner. Whether you’re a fellow researcher, a professional in the field, or someone with a keen interest in traffic engineering, this website offers a treasure trove of information and insights.\nFeel free to dive into the analyses, and I hope you find the content both informative and enlightening!"
  },
  {
    "objectID": "index.html#scope-of-the-website",
    "href": "index.html#scope-of-the-website",
    "title": "Welcome to ‘Roadway Data Decoder: AI-Powered Traffic Analysis’",
    "section": "",
    "text": "This platform serves as a window into my exploration of publicly available datasets related to traffic engineering. The datasets range from those focusing on safety to general traffic engineering datasets. Through comprehensive analysis, I aim to extract valuable insights, shed light on patterns, and present findings in an accessible manner. Whether you’re a fellow researcher, a professional in the field, or someone with a keen interest in traffic engineering, this website offers a treasure trove of information and insights.\nFeel free to dive into the analyses, and I hope you find the content both informative and enlightening!"
  }
]